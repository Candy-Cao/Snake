#ifndef PLAT_H
#define PLAT_H
#include "define.h"
#include <array>
#include <vector>
/*
######################
#                    #
#  ####        ####  #
#                    #
#   ##          ##   #
#         #          #
#        ##          #
#        ##          #
#                    #
#       #####        #
#         #          #
#                    #
#      #      #      #
#      #      #      #
#   #            #   #
##                 # #
#                    #
#                    #
#   #             #  #
#   #             #  #
#   #             #  #
######################

*/

static int g_arr[MAP_SIZE][MAP_SIZE] = {
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1},
            {1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1},
            {1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1},
            {1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1},
            {1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
        };
class Plat {
public:
    Plat() {
        for (int i = 0; i < MAP_SIZE; i++) {
            for (int j = 0; j < MAP_SIZE; j++) {
                arr[i][j] = g_arr[i][j];
            }
        }
    }
    Plat(vector<vector<int>> &vec) {
        for (int i = 0; i < MAP_SIZE; i++) {
            for (int j = 0; j < MAP_SIZE; j++) {
                arr[i][j] = vec[i][j];
            }
        }
    }
    ~Plat() {}
    array<int, MAP_SIZE> &operator[](int i) {
        return arr[i];
    }
    void PutFood(pii pos) {arr[pos.first][pos.second] = FOOD_NUM;} 
    void EraseFood(pii pos) {arr[pos.first][pos.second] = SPACE_NUM;}
    const Frame &ToFrame() {
        return arr;
    }
private:
    array<array<int, MAP_SIZE>, MAP_SIZE> arr;
};

#endif